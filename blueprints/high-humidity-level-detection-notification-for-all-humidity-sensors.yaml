blueprint:
  name: Advanced Humidity Alert & Automation
  description: Monitors humidity sensors and triggers actions
  domain: automation
  input:
    threshold:
      name: Humidity Threshold
      description: Alert when humidity exceeds this percentage
      default: 65
      selector:
        number:
          min: 5
          max: 100
          unit_of_measurement: '%'
          mode: slider
          step: 1

    days:
      name: Activation Days
      description: 0=Daily, 1=Mon...7=Sun
      default: '0'
      selector:
        select:
          options:
            - label: Daily
              value: '0'
            - label: Monday
              value: '1'
            - label: Tuesday
              value: '2'
            - label: Wednesday
              value: '3'
            - label: Thursday
              value: '4'
            - label: Friday
              value: '5'
            - label: Saturday
              value: '6'
            - label: Sunday
              value: '7'

    exclude:
      name: Excluded Targets
      description: Exclude sensors/areas/devices
      selector:
        target:
          entity:
            domain: sensor
            device_class: humidity
          device:
            manufacturer: 
              - "Aqara"
              - "Shelly"
          area: {}

    actions:
      name: Remediation Actions
      description: Optional actions (e.g., activate dehumidifier)
      selector:
        action: {}

variables:
  valid_sensors: >
    {% set ns = namespace(results=[]) %}
    {% for s in states.sensor 
      | selectattr('attributes.device_class', 'eq', 'humidity')
      | rejectattr('entity_id', 'in', exclude.entity_id or []) %}
      
      {% set value = s.state | float(default=-1) %}
      {% if value >= threshold %}
        {% set ns.results = ns.results + [{
          'name': s.name,
          'value': value | round(1),
          'entity': s.entity_id
        }] %}
      {% endif %}
    {% endfor %}
    {{ ns.results }}

trigger:
  - platform: time_pattern
    hours: "/3"  # Check every 3 hours

condition:
  - "{{ (days == '0') or (now().isoweekday() | string == days) }}"
  - "{{ valid_sensors | length > 0 }}"

action:
  - choose:
      - conditions: "{{ 'mobile_app' in notifications }}"
        sequence:
          - service: notify.mobile_app
            data:
              title: "High Humidity Alert"
              message: "Sensors: {{ valid_sensors | map(attribute='name') | join(', ') }}"

    default: []

  - if: "{{ actions is defined }}"
    then:
      - service: script.turn_on
        target:
          entity_id: "{{ actions }}"

mode: queued
